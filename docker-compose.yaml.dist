version: '3.9'

# Services
services:
  # Database
  postgres:
    container_name: dev.postgres
    image: postgres
    environment:
      POSTGRES_USER: ${USER_NAME}
      POSTGRES_PASSWORD: ${USER_PWD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    volumes:
      - ./docker/db/scripts:/docker-entrypoint-initdb.d
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Backend
  django:
    user: "${UID}:${GID}"
    container_name: dev.django
    build: ./docker/django/
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - "postgres"

  # Hasura
  graphql-engine:
    container_name: dev.hasura
    image: hasura/graphql-engine:v2.0.10
    ports:
      - "8888:8080"
    depends_on:
      - "postgres"
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgresql://${USER_NAME}:${USER_PWD}@dev.postgres:5432/hasura
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgresql://${USER_NAME}:${USER_PWD}@dev.postgres:5432/${DB_NAME}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${USER_PWD}

# Volumes
volumes:
  postgres:
  esdata:

# Network
networks:
  default:
    external:
      name: lengow_dev
